---
version: "3"

dotenv: [".env"]

env:
  ANSIBLE_CONFIG: '{{default "{{.USER_WORKING_DIR}}/ansible/ansible.cfg" .ANSIBLE_CONFIG}}'

vars:
  INVENTORY_PATH: '{{default "inventory" .INVENTORY_PATH}}'

includes:
  ansible:
    taskfile: taskfiles/ansible.tasks.yml
    dir: "{{.ROOT_DIR}}/ansible"
    vars:
      ANSIBLE_ARGS: "-u {{.ANSIBLE_USER}}"
    internal: true

  git:
    taskfile: taskfiles/git.tasks.yml
    internal: true

  rclone:
    taskfile: taskfiles/rclone.tasks.yml
    internal: true

  terraform:
    taskfile: taskfiles/terraform.tasks.yml
    vars:
      TERRAFORM_ARGS: -var="repo_dir={{.ROOT_DIR}}"
    internal: true

tasks:
  default:
    cmds:
      - task -l
    silent: true

  setup:
    desc: "Set up repository for use"
    cmds:
      - task: rclone:install
      - rm -rf {{.ROOT_DIR}}/ansible
      - git clone https://github.com/frozenfoxx/ansible-bricksandblocks.git ansible
      - task: rclone:copy
        vars:
          RCLONE_SOURCE: "inventory:{{.INVENTORY_PATH}}/"
          RCLONE_DEST: "{{.ROOT_DIR}}/ansible/inventory/"
      - task: ansible:galaxy

  plan:
    desc: "Plan infrastructure"
    cmds:
      - task: terraform:init
      - task: terraform:fmt
      - task: terraform:validate
      - task: terraform:plan

  deploy:
    desc: "Deploy infrastructure"
    cmds:
      - task: terraform:init
      - task: terraform:fmt
      - task: terraform:validate
      - task: terraform:plan
      - task: terraform:apply
      #- task: ansible:playbook
      #  vars:
      #    CLI_ARGS: playbooks/site.yml

  destroy:
    desc: "Destroy infrastructure"
    cmds:
      - task: terraform:init
      - task: terraform:fmt
      - task: terraform:validate
      - task: terraform:plan
      - task: terraform:destroy

  update:
    desc: "Update repo"
    cmds:
      - rm -rf taskfiles
      - git clone git@github.com:frozenfoxx/taskfiles.git taskfiles
      - git pull --rebase
